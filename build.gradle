buildscript {
	ext {
		springBootVersion = '1.5.7.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'jacoco'
apply plugin: 'org.springframework.boot'

group = 'co.com.ceiba'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
[ compileJava, compileTestJava ]*.options*.encoding = 'UTF-8'

repositories {
	mavenCentral()
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-data-rest')
	compile("org.springframework.boot:spring-boot-starter-thymeleaf")
    compile("org.springframework.boot:spring-boot-devtools")
	compile group: 'c3p0', name: 'c3p0', version: '0.9.0.4'
	compile group: 'org.drools', name: 'drools-core', version: '5.3.0.Final'
	compile group: 'org.drools', name: 'drools-compiler', version: '5.3.0.Final'
	runtime('org.postgresql:postgresql')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}

allprojects {
    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }
        
    tasks.withType(Test) {
       systemProperty "file.encoding", "UTF-8"
    }
}

test {
	jacoco {
		append = false
		destinationFile = file("jacoco/jacocoTest.exec")
	}
	reports.junitXml.destination = file("jacoco/test-results")
	testLogging.showStandardStreams = true
   	testLogging.exceptionFormat = 'full'
}

jacocoTestReport.dependsOn(test)
